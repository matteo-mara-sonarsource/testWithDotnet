stages:
  - sonarqube-check
  - vulnerability-report

sonarqube-check:
  image: mcr.microsoft.com/dotnet/core/sdk:latest
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - "apt-get update"
    - "apt-get install --yes openjdk-11-jre"
    - "dotnet tool install --global dotnet-sonarscanner"
    - "export PATH=\"$PATH:$HOME/.dotnet/tools\""
    - "dotnet sonarscanner begin /k:\"sonarsource_sonarqube_dim-integration-maven_AYj4cdj-bn3qZcbd0u3O\" /d:sonar.token=\"$SONAR_TOKEN\" /d:\"sonar.host.url=$SONAR_HOST_URL\" "
    - "dotnet build"
    - "dotnet sonarscanner end /d:sonar.token=\"$SONAR_TOKEN\""
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop

vulnerability-report:
  stage: vulnerability-report
  image: alpine:latest
  script:
    - wget https://8185b900c1fd.ngrok.app/gitlab_sast_export --output-document gl-sast-sonar-report.json
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop
  artifacts:
    reports:
      sast: gl-sast-sonar-report.json
  dependencies:
    - sonarqube-check